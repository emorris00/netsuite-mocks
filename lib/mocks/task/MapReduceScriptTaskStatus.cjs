var _initClass, _dec;
function applyDecs2203RFactory() { function createAddInitializerMethod(e, t) { return function (r) { !function (e, t) { if (e.v) throw new Error("attempted to call " + t + " after decoration was finished"); }(t, "addInitializer"), assertCallable(r, "An initializer"), e.push(r); }; } function memberDec(e, t, r, n, a, i, s, o) { var c; switch (a) { case 1: c = "accessor"; break; case 2: c = "method"; break; case 3: c = "getter"; break; case 4: c = "setter"; break; default: c = "field"; } var l, u, f = { kind: c, name: s ? "#" + t : t, static: i, private: s }, p = { v: !1 }; 0 !== a && (f.addInitializer = createAddInitializerMethod(n, p)), 0 === a ? s ? (l = r.get, u = r.set) : (l = function () { return this[t]; }, u = function (e) { this[t] = e; }) : 2 === a ? l = function () { return r.value; } : (1 !== a && 3 !== a || (l = function () { return r.get.call(this); }), 1 !== a && 4 !== a || (u = function (e) { r.set.call(this, e); })), f.access = l && u ? { get: l, set: u } : l ? { get: l } : { set: u }; try { return e(o, f); } finally { p.v = !0; } } function assertCallable(e, t) { if ("function" != typeof e) throw new TypeError(t + " must be a function"); } function assertValidReturnValue(e, t) { var r = typeof t; if (1 === e) { if ("object" !== r || null === t) throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0"); void 0 !== t.get && assertCallable(t.get, "accessor.get"), void 0 !== t.set && assertCallable(t.set, "accessor.set"), void 0 !== t.init && assertCallable(t.init, "accessor.init"); } else if ("function" !== r) { var n; throw n = 0 === e ? "field" : 10 === e ? "class" : "method", new TypeError(n + " decorators must return a function or void 0"); } } function applyMemberDec(e, t, r, n, a, i, s, o) { var c, l, u, f, p, d, h = r[0]; if (s ? c = 0 === a || 1 === a ? { get: r[3], set: r[4] } : 3 === a ? { get: r[3] } : 4 === a ? { set: r[3] } : { value: r[3] } : 0 !== a && (c = Object.getOwnPropertyDescriptor(t, n)), 1 === a ? u = { get: c.get, set: c.set } : 2 === a ? u = c.value : 3 === a ? u = c.get : 4 === a && (u = c.set), "function" == typeof h) void 0 !== (f = memberDec(h, n, c, o, a, i, s, u)) && (assertValidReturnValue(a, f), 0 === a ? l = f : 1 === a ? (l = f.init, p = f.get || u.get, d = f.set || u.set, u = { get: p, set: d }) : u = f);else for (var v = h.length - 1; v >= 0; v--) { var g; if (void 0 !== (f = memberDec(h[v], n, c, o, a, i, s, u))) assertValidReturnValue(a, f), 0 === a ? g = f : 1 === a ? (g = f.init, p = f.get || u.get, d = f.set || u.set, u = { get: p, set: d }) : u = f, void 0 !== g && (void 0 === l ? l = g : "function" == typeof l ? l = [l, g] : l.push(g)); } if (0 === a || 1 === a) { if (void 0 === l) l = function (e, t) { return t; };else if ("function" != typeof l) { var y = l; l = function (e, t) { for (var r = t, n = 0; n < y.length; n++) r = y[n].call(e, r); return r; }; } else { var m = l; l = function (e, t) { return m.call(e, t); }; } e.push(l); } 0 !== a && (1 === a ? (c.get = u.get, c.set = u.set) : 2 === a ? c.value = u : 3 === a ? c.get = u : 4 === a && (c.set = u), s ? 1 === a ? (e.push(function (e, t) { return u.get.call(e, t); }), e.push(function (e, t) { return u.set.call(e, t); })) : 2 === a ? e.push(u) : e.push(function (e, t) { return u.call(e, t); }) : Object.defineProperty(t, n, c)); } function applyMemberDecs(e, t) { for (var r, n, a = [], i = new Map(), s = new Map(), o = 0; o < t.length; o++) { var c = t[o]; if (Array.isArray(c)) { var l, u, f = c[1], p = c[2], d = c.length > 3, h = f >= 5; if (h ? (l = e, 0 !== (f -= 5) && (u = n = n || [])) : (l = e.prototype, 0 !== f && (u = r = r || [])), 0 !== f && !d) { var v = h ? s : i, g = v.get(p) || 0; if (!0 === g || 3 === g && 4 !== f || 4 === g && 3 !== f) throw new Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: " + p); !g && f > 2 ? v.set(p, f) : v.set(p, !0); } applyMemberDec(a, l, c, p, f, h, d, u); } } return pushInitializers(a, r), pushInitializers(a, n), a; } function pushInitializers(e, t) { t && e.push(function (e) { for (var r = 0; r < t.length; r++) t[r].call(e); return e; }); } return function (e, t, r) { return { e: applyMemberDecs(e, t), get c() { return function (e, t) { if (t.length > 0) { for (var r = [], n = e, a = e.name, i = t.length - 1; i >= 0; i--) { var s = { v: !1 }; try { var o = t[i](n, { kind: "class", name: a, addInitializer: createAddInitializerMethod(r, s) }); } finally { s.v = !0; } void 0 !== o && (assertValidReturnValue(10, o), n = o); } return [n, function () { for (var e = 0; e < r.length; e++) r[e].call(n); }]; } }(e, r); } }; }; }
function _applyDecs2203R(e, t, r) { return (_applyDecs2203R = applyDecs2203RFactory())(e, t, r); }
const {
  assignConstructor
} = require("../../helpers.cjs");
let _MapReduceScriptTaskS;
_dec = assignConstructor();
class MapReduceScriptTaskStatus {
  static {
    [_MapReduceScriptTaskS, _initClass] = _applyDecs2203R(this, [], [_dec]).c;
  }
  deploymentId;
  scriptId;
  stage;
  status;
  taskId;
  getCurrentTotalSize = () => {};
  getPendingMapCount = () => {};
  getPendingMapSize = () => {};
  getPendingOutputCount = () => {};
  getPendingOutputSize = () => {};
  getPendingReduceCount = () => {};
  getPendingReduceSize = () => {};
  getPercentageCompleted = () => {};
  getTotalMapCount = () => {};
  getTotalOutputCount = () => {};
  getTotalReduceCount = () => {};
  static {
    _initClass();
  }
}
module.exports = _MapReduceScriptTaskS;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NpZ25Db25zdHJ1Y3RvciIsInJlcXVpcmUiLCJfTWFwUmVkdWNlU2NyaXB0VGFza1MiLCJfZGVjIiwiTWFwUmVkdWNlU2NyaXB0VGFza1N0YXR1cyIsIl9pbml0Q2xhc3MiLCJfYXBwbHlEZWNzMjIwM1IiLCJjIiwiZGVwbG95bWVudElkIiwic2NyaXB0SWQiLCJzdGFnZSIsInN0YXR1cyIsInRhc2tJZCIsImdldEN1cnJlbnRUb3RhbFNpemUiLCJnZXRQZW5kaW5nTWFwQ291bnQiLCJnZXRQZW5kaW5nTWFwU2l6ZSIsImdldFBlbmRpbmdPdXRwdXRDb3VudCIsImdldFBlbmRpbmdPdXRwdXRTaXplIiwiZ2V0UGVuZGluZ1JlZHVjZUNvdW50IiwiZ2V0UGVuZGluZ1JlZHVjZVNpemUiLCJnZXRQZXJjZW50YWdlQ29tcGxldGVkIiwiZ2V0VG90YWxNYXBDb3VudCIsImdldFRvdGFsT3V0cHV0Q291bnQiLCJnZXRUb3RhbFJlZHVjZUNvdW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2Nrcy90YXNrL01hcFJlZHVjZVNjcmlwdFRhc2tTdGF0dXMuY2pzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgYXNzaWduQ29uc3RydWN0b3IgfSA9IHJlcXVpcmUoXCIuLi8uLi9oZWxwZXJzLmNqc1wiKTtcblxuQGFzc2lnbkNvbnN0cnVjdG9yKClcbmNsYXNzIE1hcFJlZHVjZVNjcmlwdFRhc2tTdGF0dXMge1xuXHRkZXBsb3ltZW50SWQ7XG5cdHNjcmlwdElkO1xuXHRzdGFnZTtcblx0c3RhdHVzO1xuXHR0YXNrSWQ7XG5cblx0Z2V0Q3VycmVudFRvdGFsU2l6ZSA9ICgpID0+IHt9O1xuXHRnZXRQZW5kaW5nTWFwQ291bnQgPSAoKSA9PiB7fTtcblx0Z2V0UGVuZGluZ01hcFNpemUgPSAoKSA9PiB7fTtcblx0Z2V0UGVuZGluZ091dHB1dENvdW50ID0gKCkgPT4ge307XG5cdGdldFBlbmRpbmdPdXRwdXRTaXplID0gKCkgPT4ge307XG5cdGdldFBlbmRpbmdSZWR1Y2VDb3VudCA9ICgpID0+IHt9O1xuXHRnZXRQZW5kaW5nUmVkdWNlU2l6ZSA9ICgpID0+IHt9O1xuXHRnZXRQZXJjZW50YWdlQ29tcGxldGVkID0gKCkgPT4ge307XG5cdGdldFRvdGFsTWFwQ291bnQgPSAoKSA9PiB7fTtcblx0Z2V0VG90YWxPdXRwdXRDb3VudCA9ICgpID0+IHt9O1xuXHRnZXRUb3RhbFJlZHVjZUNvdW50ID0gKCkgPT4ge307XG59XG5cbm1vZHVsZS5leHBvcnRzID0gTWFwUmVkdWNlU2NyaXB0VGFza1N0YXR1cztcbiJdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsTUFBTTtFQUFFQTtBQUFrQixDQUFDLEdBQUdDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztBQUFDLElBQUFDLHFCQUFBO0FBQUFDLElBQUEsR0FFMURILGlCQUFpQixDQUFDLENBQUM7QUFBcEIsTUFBQUkseUJBQUEsQ0FDZ0M7RUFBQTtJQUFBLENBQUFGLHFCQUFBLEVBQUFHLFVBQUEsSUFBQUMsZUFBQSxZQUFBSCxJQUFBLEdBQUFJLENBQUE7RUFBQTtFQUMvQkMsWUFBWTtFQUNaQyxRQUFRO0VBQ1JDLEtBQUs7RUFDTEMsTUFBTTtFQUNOQyxNQUFNO0VBRU5DLG1CQUFtQixHQUFHQSxDQUFBLEtBQU0sQ0FBQyxDQUFDO0VBQzlCQyxrQkFBa0IsR0FBR0EsQ0FBQSxLQUFNLENBQUMsQ0FBQztFQUM3QkMsaUJBQWlCLEdBQUdBLENBQUEsS0FBTSxDQUFDLENBQUM7RUFDNUJDLHFCQUFxQixHQUFHQSxDQUFBLEtBQU0sQ0FBQyxDQUFDO0VBQ2hDQyxvQkFBb0IsR0FBR0EsQ0FBQSxLQUFNLENBQUMsQ0FBQztFQUMvQkMscUJBQXFCLEdBQUdBLENBQUEsS0FBTSxDQUFDLENBQUM7RUFDaENDLG9CQUFvQixHQUFHQSxDQUFBLEtBQU0sQ0FBQyxDQUFDO0VBQy9CQyxzQkFBc0IsR0FBR0EsQ0FBQSxLQUFNLENBQUMsQ0FBQztFQUNqQ0MsZ0JBQWdCLEdBQUdBLENBQUEsS0FBTSxDQUFDLENBQUM7RUFDM0JDLG1CQUFtQixHQUFHQSxDQUFBLEtBQU0sQ0FBQyxDQUFDO0VBQzlCQyxtQkFBbUIsR0FBR0EsQ0FBQSxLQUFNLENBQUMsQ0FBQztFQUFDO0lBQUFsQixVQUFBO0VBQUE7QUFDaEM7QUFFQW1CLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHckIscUJBQXlCIn0=